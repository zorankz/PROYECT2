import { EventName, ListenerFunction } from './interface';
import EventEmitter from '../events';
export declare function isValidListener(listener: Function): boolean;
export declare function isValidEventName(eventName: EventName): boolean;
export declare function isString(val: any): boolean;
export declare function isSymbol(val: any): boolean;
export declare function isFunction(val: any): boolean;
export declare function isPositiveNumber(val: any): boolean;
export declare const isArray: (arg: any) => arg is any[];
/**
 * Finds the index of the listener for the event in its storage array.
 *
 * @param {Function[]} listeners Array of listeners to search through.
 * @param {Function} listener Method to look for.
 * @return {Number} Index of the specified listener, -1 if not found
 * @api private
 */
export declare function indexOfListener(listeners: ListenerFunction[], listener: Function): number;
export declare function createListenerFunction(events: EventEmitter, eventName: EventName, listener: Function, once?: boolean): ListenerFunction;
